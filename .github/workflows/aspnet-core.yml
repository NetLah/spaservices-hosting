name: ASP.NET Core

on:
  push:
    branches: ["main", "dev*"]
    tags: ["*.*.*"]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [macos-11, ubuntu-22.04, windows-latest]
    name: ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET Core 7.0.x and 6.0.x
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            6.0.x
            7.0.x

      - name: dotnet info
        run: dotnet --info

      - name: Install dotnet tool
        run: dotnet tool restore

      - name: MinVer
        shell: pwsh
        id: minver
        run: Write-Output "version=$(dotnet minver)" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Set UI Version
        shell: pwsh
        run: |
          $version = "$(dotnet minver)+$($Env:GITHUB_SHA.SubString(0,7))"
          $substitutionVersion = '${1} ' + $version
          $versionFilePath = 'src/WebApp/wwwroot/.version'
          $content = (Get-Content $versionFilePath -ErrorAction Stop) -replace '^(version:).*$', $substitutionVersion
          $substitutionBuildTime = '${1} ' + $(Get-Date).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.fffZ')
          $content = $content -replace '^(buildTime:).*$', $substitutionBuildTime
          Set-Content -Path $versionFilePath -Value $content -ErrorAction Stop
          Write-Output "`n<!-- Build commit $($Env:GITHUB_SHA) / $($Env:GITHUB_REF_NAME) at $($(Get-Date).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.fffZ')) -->" | Out-File -FilePath src/WebApp/wwwroot/index.html -Encoding utf8 -Append

      - name: Set Docker tag suffix
        if: ${{ success() && (runner.os == 'Linux' || runner.os == 'Windows') }}
        shell: pwsh
        run: |
          $tagSuffix = if ($Env:RUNNER_OS -eq 'Linux') { '-alpine' } else { if ($Env:RUNNER_OS -eq 'Windows') { '-nanoserver-1809' } }
          Write-Output "TAG_SUFFIX=$tagSuffix" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          Write-Host "Set tag suffix to: $tagSuffix"

      - name: Docker meta 6.0
        if: ${{ success() && (runner.os == 'Linux' || runner.os == 'Windows') }}
        id: meta60
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKER_HUB_REPOS }}
            name=netlah/spa-host,enable=${{ startsWith(github.ref, 'refs/tags/') }}
          flavor: |
            latest=auto
            suffix=${{ env.TAG_SUFFIX }}
          tags: |
            type=raw,enable=${{ github.event_name != 'pull_request' }},priority=999,value=${{ steps.minver.outputs.version }}
            type=match,enable=${{ startsWith(github.ref, 'refs/tags/') }},priority=900,pattern=^(\d+\.\d+(\.\d+)?(-.+)?)$,group=1
            type=match,enable=${{ startsWith(github.ref, 'refs/tags/') }},priority=880,pattern=^(\d+\.\d+(\.\d+)?)(-.+)?$,group=1
            type=match,enable=${{ startsWith(github.ref, 'refs/tags/') }},priority=870,pattern=^(\d+\.\d+)(\.\d+)?(-.+)?$,group=1
            type=match,enable=${{ startsWith(github.ref, 'refs/tags/') }},priority=860,pattern=^(\d+)\.\d+(\.\d+)?(-.+)?$,group=1
            type=raw,enable=${{ github.event_name != 'pull_request' }},priority=699,prefix=6.0-,value=${{ steps.minver.outputs.version }}
            type=ref,event=branch,priority=500,prefix=6.0-
            type=ref,event=pr,priority=500,prefix=6.0-pr-
            type=sha,enable=${{ github.event_name != 'pull_request' }},priority=400,prefix=6.0-sha-,format=short
            type=match,enable=${{ startsWith(github.ref, 'refs/tags/') }},priority=600,prefix=6.0-,pattern=^(\d+\.\d+(\.\d+)?(-.+)?)$,group=1
            type=match,enable=${{ startsWith(github.ref, 'refs/tags/') }},priority=580,prefix=6.0-,pattern=^(\d+\.\d+(\.\d+)?)(-.+)?$,group=1
            type=match,enable=${{ startsWith(github.ref, 'refs/tags/') }},priority=570,prefix=6.0-,pattern=^(\d+\.\d+)(\.\d+)?(-.+)?$,group=1
            type=match,enable=${{ startsWith(github.ref, 'refs/tags/') }},priority=560,prefix=6.0-,pattern=^(\d+)\.\d+(\.\d+)?(-.+)?$,group=1

      - name: Docker meta sample 6.0
        if: ${{ success() && (runner.os == 'Linux' || runner.os == 'Windows') }}
        id: meta_sample60
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKER_HUB_SAMPLE_REPOS }}
            name=netlah/spa-host-sample,enable=${{ startsWith(github.ref, 'refs/tags/') }}
          flavor: |
            latest=auto
            suffix=${{ env.TAG_SUFFIX }}
          tags: |
            type=raw,enable=${{ github.event_name != 'pull_request' }},priority=999,value=${{ steps.minver.outputs.version }}
            type=match,enable=${{ startsWith(github.ref, 'refs/tags/') }},priority=900,pattern=^(\d+\.\d+(\.\d+)?(-.+)?)$,group=1
            type=match,enable=${{ startsWith(github.ref, 'refs/tags/') }},priority=880,pattern=^(\d+\.\d+(\.\d+)?)(-.+)?$,group=1
            type=match,enable=${{ startsWith(github.ref, 'refs/tags/') }},priority=870,pattern=^(\d+\.\d+)(\.\d+)?(-.+)?$,group=1
            type=match,enable=${{ startsWith(github.ref, 'refs/tags/') }},priority=860,pattern=^(\d+)\.\d+(\.\d+)?(-.+)?$,group=1
            type=raw,enable=${{ github.event_name != 'pull_request' }},priority=699,prefix=6.0-,value=${{ steps.minver.outputs.version }}
            type=ref,event=branch,priority=500,prefix=6.0-
            type=ref,event=pr,priority=500,prefix=6.0-pr-
            type=sha,enable=${{ github.event_name != 'pull_request' }},priority=400,prefix=6.0-sha-,format=short
            type=match,enable=${{ startsWith(github.ref, 'refs/tags/') }},priority=600,prefix=6.0-,pattern=^(\d+\.\d+(\.\d+)?(-.+)?)$,group=1
            type=match,enable=${{ startsWith(github.ref, 'refs/tags/') }},priority=580,prefix=6.0-,pattern=^(\d+\.\d+(\.\d+)?)(-.+)?$,group=1
            type=match,enable=${{ startsWith(github.ref, 'refs/tags/') }},priority=570,prefix=6.0-,pattern=^(\d+\.\d+)(\.\d+)?(-.+)?$,group=1
            type=match,enable=${{ startsWith(github.ref, 'refs/tags/') }},priority=560,prefix=6.0-,pattern=^(\d+)\.\d+(\.\d+)?(-.+)?$,group=1

      - name: Docker meta 7.0
        if: ${{ success() && (runner.os == 'Linux' || runner.os == 'Windows') }}
        id: meta70
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKER_HUB_REPOS }}
            name=netlah/spa-host,enable=${{ startsWith(github.ref, 'refs/tags/') }}
          flavor: |
            latest=auto
            suffix=${{ env.TAG_SUFFIX }}
            prefix=7.0-
          tags: |
            type=raw,enable=${{ github.event_name != 'pull_request' }},priority=699,value=${{ steps.minver.outputs.version }}
            type=ref,event=branch,priority=500
            type=ref,event=pr,priority=500,prefix=7.0-pr-
            type=sha,enable=${{ github.event_name != 'pull_request' }},priority=400,prefix=7.0-sha-,format=short
            type=match,enable=${{ startsWith(github.ref, 'refs/tags/') }},priority=600,pattern=^(\d+\.\d+(\.\d+)?(-.+)?)$,group=1
            type=match,enable=${{ startsWith(github.ref, 'refs/tags/') }},priority=580,pattern=^(\d+\.\d+(\.\d+)?)(-.+)?$,group=1
            type=match,enable=${{ startsWith(github.ref, 'refs/tags/') }},priority=570,pattern=^(\d+\.\d+)(\.\d+)?(-.+)?$,group=1
            type=match,enable=${{ startsWith(github.ref, 'refs/tags/') }},priority=560,pattern=^(\d+)\.\d+(\.\d+)?(-.+)?$,group=1

      - name: Docker meta sample 7.0
        if: ${{ success() && (runner.os == 'Linux' || runner.os == 'Windows') }}
        id: meta_sample70
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKER_HUB_SAMPLE_REPOS }}
            name=netlah/spa-host-sample,enable=${{ startsWith(github.ref, 'refs/tags/') }}
          flavor: |
            latest=auto
            suffix=${{ env.TAG_SUFFIX }}
            prefix=7.0-
          tags: |
            type=raw,enable=${{ github.event_name != 'pull_request' }},priority=699,value=${{ steps.minver.outputs.version }}
            type=ref,event=branch,priority=500
            type=ref,event=pr,priority=500,prefix=7.0-pr-
            type=sha,enable=${{ github.event_name != 'pull_request' }},priority=400,prefix=7.0-sha-,format=short
            type=match,enable=${{ startsWith(github.ref, 'refs/tags/') }},priority=600,pattern=^(\d+\.\d+(\.\d+)?(-.+)?)$,group=1
            type=match,enable=${{ startsWith(github.ref, 'refs/tags/') }},priority=580,pattern=^(\d+\.\d+(\.\d+)?)(-.+)?$,group=1
            type=match,enable=${{ startsWith(github.ref, 'refs/tags/') }},priority=570,pattern=^(\d+\.\d+)(\.\d+)?(-.+)?$,group=1
            type=match,enable=${{ startsWith(github.ref, 'refs/tags/') }},priority=560,pattern=^(\d+)\.\d+(\.\d+)?(-.+)?$,group=1

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test -c Release --no-build --verbosity normal

      - name: Publish
        run: |
          dotnet publish src/WebApp -c Release -f net6.0 --no-build -o artifacts/net6.0/app
          dotnet publish src/WebApp -c Release -f net7.0 --no-build -o artifacts/net7.0/app

      - name: Split sample wwwroot
        shell: pwsh
        run: |
          $webFolder = New-Item -Name 'artifacts/net6.0/wwwroot' -ItemType 'Directory' -ErrorAction Stop
          Move-Item -Force -Path 'artifacts/net6.0/app/wwwroot/*' -Destination "$webFolder/" -Exclude favicon.ico -ErrorAction Stop -Verbose
          $webFolder = New-Item -Name 'artifacts/net7.0/wwwroot' -ItemType 'Directory' -ErrorAction Stop
          Move-Item -Force -Path 'artifacts/net7.0/app/wwwroot/*' -Destination "$webFolder/" -Exclude favicon.ico -ErrorAction Stop -Verbose

      - name: Copy Dockerfile
        if: ${{ success() && (runner.os == 'Linux' || runner.os == 'Windows') }}
        shell: pwsh
        run: |
          Copy-Item -Recurse -Force -Path '.dockerignore',".docker-$( if ($Env:RUNNER_OS -eq 'Linux') { 'linux' } else { 'windows' } )/*" -Destination artifacts/net6.0/ -ErrorAction Stop -Verbose
          Copy-Item -Recurse -Force -Path '.dockerignore',".docker-$( if ($Env:RUNNER_OS -eq 'Linux') { 'linux' } else { 'windows' } )/*" -Destination artifacts/net7.0/ -ErrorAction Stop -Verbose

      - name: Enabling Docker Daemon With experimental features
        if: ${{ success() && runner.os == 'Linux' }}
        run: |
          echo 'Before update daemon.json'
          sudo cat /etc/docker/daemon.json
          sudo bash -c 'echo "{ "\""exec-opts"\"": ["\""native.cgroupdriver=cgroupfs"\""], "\""cgroup-parent"\"": "\""/actions_job"\"", "\""experimental"\"": true }" > /etc/docker/daemon.json'
          echo 'After update daemon.json'
          sudo cat /etc/docker/daemon.json
          sudo systemctl restart docker.service

      - name: Set up Docker Buildx
        if: ${{ success() && (runner.os == 'Linux') }}
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: ${{ success() && (runner.os == 'Linux' || runner.os == 'Windows') }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push 6.0
        if: ${{ success() && (runner.os == 'Linux' || runner.os == 'Windows') }}
        id: build60
        shell: pwsh
        run: ./docker-build.ps1 -Context ./artifacts/net6.0 -Squash -Tags "${{ steps.meta60.outputs.tags }}" -Labels "${{ steps.meta60.outputs.labels }}"

      - name: Build and Push Sample 6.0
        if: ${{ success() && (runner.os == 'Linux' || runner.os == 'Windows') }}
        shell: pwsh
        run: ./docker-build.ps1 -Context ./artifacts/net6.0 -NoPull -Dockerfile ./.docker-share/Dockerfile-sample -Tags "${{ steps.meta_sample60.outputs.tags }}" -Labels "${{ steps.meta_sample60.outputs.labels }}" -BuildArgs "SPAHOST_IMAGE=$Env:SPAHOST_IMAGE"
        env:
          SPAHOST_IMAGE: ${{ steps.build60.outputs.image }}

      - name: Build and Push 7.0
        if: ${{ success() && (runner.os == 'Linux' || runner.os == 'Windows') }}
        id: build70
        shell: pwsh
        run: |
          $aspnetImageTag70 = if ($Env:RUNNER_OS -eq 'Linux') { '7.0-alpine' } else { '7.0-nanoserver-1809' }
          ./docker-build.ps1 -Context ./artifacts/net7.0 -Squash -Tags "${{ steps.meta70.outputs.tags }}" -Labels "${{ steps.meta70.outputs.labels }}" -BuildArgs "ASPNET_IMAGE_TAG=$aspnetImageTag70"

      - name: Build and Push Sample 7.0
        if: ${{ success() && (runner.os == 'Linux' || runner.os == 'Windows') }}
        shell: pwsh
        run: ./docker-build.ps1 -Context ./artifacts/net7.0 -NoPull -Dockerfile ./.docker-share/Dockerfile-sample -Tags "${{ steps.meta_sample70.outputs.tags }}" -Labels "${{ steps.meta_sample70.outputs.labels }}" -BuildArgs "SPAHOST_IMAGE=$Env:SPAHOST_IMAGE"
        env:
          SPAHOST_IMAGE: ${{ steps.build70.outputs.image }}

      - name: Pack
        run: dotnet pack -c Release -o ./artifacts/packages/ --no-build --verbosity normal

      - if: ${{ success() && runner.os == 'Windows' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) }}
        name: Push MyGet
        run: dotnet nuget push .\artifacts\packages\*.nupkg -s https://www.myget.org/F/netlah/api/v2/package -k ${{ secrets.MYGET }}

      - if: ${{ success() && runner.os == 'Windows' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') || startsWith(github.ref, 'refs/heads/dev')) }}
        name: Push Nuget to GitHub registry
        run: dotnet nuget push .\artifacts\packages\*.nupkg -s https://nuget.pkg.github.com/NetLah/index.json --skip-duplicate -k ${{ secrets.PUSH_GITHUB_REGISTRY_TOKEN }}
