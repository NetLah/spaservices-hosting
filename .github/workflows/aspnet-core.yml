name: ASP.NET Core

on:
  push:
    branches: ["main", "dev*"]
    tags: ["*.*.*"]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [macos-11, ubuntu-latest, windows-latest]
    name: ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup .NET Core 6.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0.x"

      - name: dotnet info
        run: dotnet --info

      - name: Install dotnet tool
        run: dotnet tool restore

      - name: MinVer
        id: minver
        run: echo "::set-output name=version::$(dotnet minver)"

      - name: Set UI Version
        shell: pwsh
        run: |
          $version = "$(dotnet minver)+$($Env:GITHUB_SHA.SubString(0,7))"
          $substitutionVersion = '${1} ' + $version
          $versionFilePath = 'src/WebApp/wwwroot/.version'
          $content = (Get-Content $versionFilePath -ErrorAction Stop) -replace '^(version:).*$', $substitutionVersion
          $substitutionBuildTime = '${1} ' + $(Get-Date).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.fffZ')
          $content = $content -replace '^(buildTime:).*$', $substitutionBuildTime
          Set-Content -Path $versionFilePath -Value $content -ErrorAction Stop
          Write-Output "`n<!-- Build commit $($Env:GITHUB_SHA) / $($Env:GITHUB_REF_NAME) at $($(Get-Date).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.fffZ')) -->" | Out-File -FilePath src/WebApp/wwwroot/index.html -Encoding utf8 -Append

      - name: Set Docker tag suffix=alpine
        if: ${{ success() && github.event_name != 'pull_request' && runner.os == 'Linux' }}
        shell: pwsh
        run: |
          echo "TAG_SUFFIX=-alpine" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "Set tag suffix to: -alpine"

      - name: Set Docker tag suffix=nanoserver-1809
        if: ${{ success() && github.event_name != 'pull_request' && runner.os == 'Windows' }}
        shell: pwsh
        run: |
          echo "TAG_SUFFIX=-nanoserver-1809" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "Set tag suffix to: -nanoserver-1809"

      - name: Docker Repos Selection
        if: ${{ success() && github.event_name != 'pull_request' && (runner.os == 'Linux' || runner.os == 'Windows') }}
        id: repos
        shell: pwsh
        run: |
          $repos='${{ secrets.DOCKER_HUB_REPOS }}'
          if ($Env:GITHUB_REF.StartsWith('refs/tags/')) {
            $repos+='%0A'
            $repos+='netlah/spa-host'
          }
          Write-Output "::set-output name=content::$repos"

      - name: Docker Sample Repos Selection
        if: ${{ success() && github.event_name != 'pull_request' && (runner.os == 'Linux' || runner.os == 'Windows') }}
        id: sample_repos
        shell: pwsh
        run: |
          $repos='${{ secrets.DOCKER_HUB_SAMPLE_REPOS }}'
          if ($Env:GITHUB_REF.StartsWith('refs/tags/')) {
            $repos+='%0A'
            $repos+='netlah/spa-host-sample'
          }
          Write-Output "::set-output name=content::$repos"

      - name: Docker meta
        if: ${{ success() && github.event_name != 'pull_request' && (runner.os == 'Linux' || runner.os == 'Windows') }}
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ steps.repos.outputs.content }}
          tags: |
            type=raw,enable=true,priority=999,prefix=,suffix=${{ env.TAG_SUFFIX }},value=${{ steps.minver.outputs.version }}
            type=ref,event=branch,priority=600,prefix=,suffix=${{ env.TAG_SUFFIX }}
            type=sha,enable=true,priority=500,prefix=sha-,suffix=${{ env.TAG_SUFFIX }},format=short
            type=match,enable=true,priority=900,prefix=,suffix=${{ env.TAG_SUFFIX }},pattern=^(\d+\.\d+(\.\d+)?(-.+)?)$,group=1
            type=match,enable=true,priority=880,prefix=,suffix=${{ env.TAG_SUFFIX }},pattern=^(\d+\.\d+(\.\d+)?)(-.+)?$,group=1
            type=match,enable=true,priority=870,prefix=,suffix=${{ env.TAG_SUFFIX }},pattern=^(\d+\.\d+)(\.\d+)?(-.+)?$,group=1
            type=match,enable=true,priority=860,prefix=,suffix=${{ env.TAG_SUFFIX }},pattern=^(\d+)\.\d+(\.\d+)?(-.+)?$,group=1

      - name: Docker meta sample
        if: ${{ success() && github.event_name != 'pull_request' && (runner.os == 'Linux' || runner.os == 'Windows') }}
        id: meta_sample
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ steps.sample_repos.outputs.content }}
          tags: |
            type=raw,enable=true,priority=999,prefix=,suffix=${{ env.TAG_SUFFIX }},value=${{ steps.minver.outputs.version }}
            type=ref,event=branch,priority=600,prefix=,suffix=${{ env.TAG_SUFFIX }}
            type=sha,enable=true,priority=500,prefix=sha-,suffix=${{ env.TAG_SUFFIX }},format=short
            type=match,enable=true,priority=900,prefix=,suffix=${{ env.TAG_SUFFIX }},pattern=^(\d+\.\d+(\.\d+)?(-.+)?)$,group=1
            type=match,enable=true,priority=880,prefix=,suffix=${{ env.TAG_SUFFIX }},pattern=^(\d+\.\d+(\.\d+)?)(-.+)?$,group=1
            type=match,enable=true,priority=870,prefix=,suffix=${{ env.TAG_SUFFIX }},pattern=^(\d+\.\d+)(\.\d+)?(-.+)?$,group=1
            type=match,enable=true,priority=860,prefix=,suffix=${{ env.TAG_SUFFIX }},pattern=^(\d+)\.\d+(\.\d+)?(-.+)?$,group=1

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test -c Release --no-build --verbosity normal

      - name: Publish
        run: dotnet publish src/WebApp -c Release --no-build -o artifacts/app

      - name: Split sample wwwroot
        shell: pwsh
        run: |
          $webFolder = New-Item -Name 'artifacts/wwwroot' -ItemType 'Directory' -ErrorAction Stop
          Move-Item -Force -Path 'artifacts/app/wwwroot/*' -Destination "$webFolder/" -Exclude favicon.ico -ErrorAction Stop

      - name: Copy Dockerfile Linux
        if: ${{ success() && github.event_name != 'pull_request' && runner.os == 'Linux' }}
        shell: pwsh
        run: Copy-Item -Recurse -Force -Path '.dockerignore','.docker-share/*','.docker-linux/*' -Destination artifacts/ -ErrorAction Stop -Verbose

      - name: Copy Dockerfile Windows
        if: ${{ success() && github.event_name != 'pull_request' && runner.os == 'Windows' }}
        shell: pwsh
        run: Copy-Item -Recurse -Force -Path '.dockerignore','.docker-share/*','.docker-windows/*' -Destination artifacts/ -ErrorAction Stop -Verbose

      - name: Login to Docker Hub
        if: ${{ success() && github.event_name != 'pull_request' && (runner.os == 'Linux' || runner.os == 'Windows') }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push
        if: ${{ success() && github.event_name != 'pull_request' && (runner.os == 'Linux' || runner.os == 'Windows') }}
        shell: pwsh
        run: ./docker-build.ps1 -Context ./artifacts -Tags "${{ steps.meta.outputs.tags }}" -Labels "${{ steps.meta.outputs.labels }}"

      - name: Build and Push Sample
        if: ${{ success() && github.event_name != 'pull_request' && (runner.os == 'Linux' || runner.os == 'Windows') }}
        shell: pwsh
        run: ./docker-build.ps1 -Context ./artifacts -Dockerfile Dockerfile-sample -Tags "${{ steps.meta_sample.outputs.tags }}" -Labels "${{ steps.meta_sample.outputs.labels }}" -BuildArgs "SPAHOST_IMAGE=${{ secrets.DOCKER_HUB_REPOS }}"

      - name: Pack
        run: dotnet pack -c Release -o ./artifacts/packages/ --no-build --verbosity normal

      - if: ${{ success() && runner.os == 'Windows' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) }}
        name: Push MyGet
        run: dotnet nuget push .\artifacts\packages\*.nupkg -s https://www.myget.org/F/netlah/api/v2/package -k ${{ secrets.MYGET }}

      - if: ${{ success() && runner.os == 'Windows' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') || startsWith(github.ref, 'refs/heads/dev')) }}
        name: Push Nuget to GitHub registry
        run: dotnet nuget push .\artifacts\packages\*.nupkg -s https://nuget.pkg.github.com/NetLah/index.json --skip-duplicate -k ${{ secrets.PUSH_GITHUB_REGISTRY_TOKEN }}
